/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>
    '/[...404]': RouteRecordInfo<
      '/[...404]',
      '/:404(.*)',
      { 404: ParamValue<true> },
      { 404: ParamValue<false> }
    >
    '/library': RouteRecordInfo<'/library', '/library', Record<never, never>, Record<never, never>>
    '/notes': RouteRecordInfo<'/notes', '/notes', Record<never, never>, Record<never, never>>
    '/posts/': RouteRecordInfo<'/posts/', '/posts', Record<never, never>, Record<never, never>>
    '/posts/thoughts-on-llm': RouteRecordInfo<
      '/posts/thoughts-on-llm',
      '/posts/thoughts-on-llm',
      Record<never, never>,
      Record<never, never>
    >
    '/projects': RouteRecordInfo<
      '/projects',
      '/projects',
      Record<never, never>,
      Record<never, never>
    >
    '/setup': RouteRecordInfo<'/setup', '/setup', Record<never, never>, Record<never, never>>
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'pages/index.md': {
      routes: '/'
      views: never
    }
    'pages/[...404].md': {
      routes: '/[...404]'
      views: never
    }
    'pages/library.md': {
      routes: '/library'
      views: never
    }
    'pages/notes.md': {
      routes: '/notes'
      views: never
    }
    'pages/posts/index.md': {
      routes: '/posts/'
      views: never
    }
    'pages/posts/thoughts-on-llm.md': {
      routes: '/posts/thoughts-on-llm'
      views: never
    }
    'pages/projects.md': {
      routes: '/projects'
      views: never
    }
    'pages/setup.md': {
      routes: '/setup'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> = _RouteFileInfoMap extends Record<
    FilePath,
    infer Info
  >
    ? Info['routes']
    : keyof RouteNamedMap
}
